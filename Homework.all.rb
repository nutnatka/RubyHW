
#1. Дан целочисленный массив. Необходимо вывести вначале его элементы с четными индексами, а затем - с нечетными.
task1=->{
    arr = [10,11,12,13,14,15,16,17,18,19]
    for i in 0...arr.length do
        next if !i.even?
        puts "#{i} - #{arr[i]}"
    end
    for i in 0...arr.length do
        next if i.even?
        puts "#{i} - #{arr[i]}" if !i.even?
    end
    }
#2
=begin
arr = [10,11,12,13,14,15,16,17,18,19]
arr.each_with_index {|el, i| puts el if i.even?}
arr.each_with_index {|el, i| puts el if !i.even?} 
=end

#2------------------------------------------------------------------------------------------

#2Дан целочисленный массив. Необходимо вывести вначале его элементы с нечетными индексами, а затем - четными.	
task2=->{
    arr = [10,11,12,13,14,15,16,17,18,19]
    for i in 0...arr.length do
        next if i.even?
        puts "#{i} - #{arr[i]}" if !i.even?
    end
    for i in 0...arr.length do
        next if !i.even?
        puts "#{i} - #{arr[i]}"
    end
    }

#2
=begin
arr = [10,11,12,13,14,15,16,17,18,19]
arr.each_with_index {|el, i| puts el if !i.even?} 
arr.each_with_index {|el, i| puts el if i.even?}
=end

#3-----------------------------------------------------------------------------------------------------------------------

# 86. Дан целочисленный массив. Найти среднее арифметическое его элементов.	
task86=->{
    arr = [10,11,12,13,14,15,16,17,18,19]
    n = 0
    arr.each do |it|
        n = it + n
    end 
    z=n/arr.length
    puts z  
    }

#4-----------------------------------------------------------------------------------------------------------------------

#88.Дан целочисленный массив. Найти количество четных элементов.
task88=->{
    arr = [10,11,12,13,14,15,16,17,18,19]
    n=0
    arr.each {|el| n+=1 if el.even?}
    puts n
    }

#5--------------------------------------------------------------------------------------------------------------------------------

#75Дан целочисленный массив. Найти среднее арифметическое модулей его элементов
task75=->{
    arr = [10,11,12,13,14,15,16,17,18,19]
    n = 0
    arr.each do |it|
        n = it + n.abs
    end 
    z=n.abs/arr.length
    puts z
    }

#6---------------------------------------------------------------------------------------------------------------------------------------

#90.Дан целочисленный массив. Найти количество нечетных элементов.	
task90=->{
    arr = [10,11,12,13,14,15,16,17,18,19]
    n=0
    arr.each {|el| n+=1 if !el.even?}
    puts n
    }

#7-----------------------------------------------------------------------------------------------------------------------------------------------------

#29Дан целочисленный массив. Упорядочить его по возрастанию.	
task29=->{
    arr = [25,11,-8,4,18,-15,49,36,-25,6,10,-4,58]
    arr =arr.sort
    puts arr
    }

#8------------------------------------------------------------------------------------------------------------------------------

#9Дан целочисленный массив. Заменить все положительные элементы на значение минимального.
task9=->{
    arr = [25,11,-8,4,18,-15,49,36,-25,6,10,-4,58]
    min = arr[0]
    arr.each { |n| 
        if n< min; min = n end
    }
    puts min
    arr.each_with_index {|el,i| if el>0; arr[i]=min  end }
    puts arr
    }

#9---------------------------------------------------------------------------------------------------------------------------------------------------------

#30Дан целочисленный массив. Упорядочить его по убыванию.	
task30=->{
    arr = [25,11,-8,4,18,-15,49,36,-25,6,10,-4,58]
    arr =arr.sort.reverse
    }

#10----------------------------------------------------------------------------------------------------------------------------------------------------

#10Дан целочисленный массив. Заменить все положительные элементы на значение максимального.	
task10=->{
    arr = [25,11,-8,4,18,-15,49,36,-25,6,10,-4,58]
    max = arr[0]
    arr.each { |n| 
        if n> max; max = n end
    }
    puts max
    arr.each_with_index {|el,i| if el<0; arr[i]=max  end }
    puts arr
    }

#11-----------------------------------------------------------------------------------------------------------------------------------------------------------

#12Дан целочисленный массив. Заменить все отрицательные элементы на значение минимального.	
task12=->{
    arr = [25,11,-8,4,18,-15,49,36,-25,6,10,-4,58]
    min = arr[0]
    arr.each { |n| 
        if n< min; min = n end
    }
    puts min
    arr.each_with_index {|el,i| if el<0; arr[i]=min  end }
    puts arr
    }

#12--------------------------------------------------------------------------------------------------------------------------------------------------------

#13Дан целочисленный массив. Заменить все отрицательные элементы на значение максимального.	
task13=->{
    arr = [25,11,-8,4,18,-15,49,36,-25,6,10,-4,58]
    max = arr[0]
    arr.each { |n| 
        if n>max; max = n end
    }
    puts max
    arr.each_with_index {|el,i| if el<0; arr[i]=max end }
    puts arr
    }

#13---------------------------------------------------------------------------------------------------------------------------------------------------

#38Дан целочисленный массив. Найти индекс последнего максимального элемента.
task38=->{
    arr = [58,25,11,-8,4,18,-15,49,36,-25,6,10,-4,58]
    index=0	
    max = arr [index]
    arr.each_with_index {|el,i| if el>=max; index=i; max = el end}
    puts index
    }


#14-------------------------------------------------------------------------------------------------------------------------------------------------------------

#77Дано целое число. Найти сумму его цифр.		
task77=->{
    n=258
    result= 0;
    while n>0    
        result = result + n%10;
        n = n/10;    
    end
    puts result
    }

#15-----------------------------------------------------------------------------------------------------------------------------

#39Дан целочисленный массив. Найти количество минимальных элементов.
task39=->{
    arr = [58,25,11,-8,4,18,-15,49,36,-25,6,10,-4,58,-25]
    min=arr[0]
    count=0
    arr.each {|el| if el<min; min=el; end}
    arr.each {|el| if el==min; count = count +1; end}
    puts count
    }

#16--------------------------------------------------------------------------------------------------------------------------------------------

#40Дан целочисленный массив. Найти количество максимальных элементов.
task40=->{
    arr = [58,25,11,-8,4,18,-15,49,36,-25,6,10,-4,58,-25]
        puts arr.keep_if{|el| el < arr.max}.count
    }

#17----------------------------------------------------------------------------------------------------------------------------------------------------


#42Дан целочисленный массив. Найти минимальный нечетный элемент.
task42=->{
    arr = [58,25,11,-8,4,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    puts arr.find_all(&:odd?).min
    }

#18------------------------------------------------------------------------------------------------------------------------------------------------------------

#2Дан целочисленный массив. Преобразовать его, прибавив к четным числам первый элемент. Первый и последний элементы массива не изменять.	
task2 = -> {
    arr = [58,25,11,-8,4,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    arr.map! {|el| el+= arr.first if el.even? {el+=5}}
    print arr, " "
    puts}

#19-------------------------------------------------------------------------------------------------------------------------------------------------------

#46Дан целочисленный массив. Найти максимальный отрицательный элемент.
task46 = -> {
    arr = [58,25,11,-8,4,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    puts arr.filter{|el| el < 0}.max}

#20-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#43Дан целочисленный массив. Найти минимальный четный элемент.	
task43 = ->{
    arr = [58,25,11,-8,4,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    puts arr.filter {|el| el.even?}.min
     }

#21-----------------------------------------------------------------------------------------------------------------------------------------------

#45Дан целочисленный массив. Найти минимальный положительный элемент.
task45 = ->{
    arr = [58,25,11,-8,4,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    puts arr.filter {|el| el>0}.max
     }
    
#22---------------------------------------------------------------------------------------------------------------------------------------------

#42Дан целочисленный массив. Найти максимальный нечетный элемент.
task42 = ->{
    arr = [58,25,11,-8,4,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    arr2 = arr.filter {|el| !el.even?}
    puts arr2.max
     }

     																								
#23-------------------------------------------------------------------------------------------------------------------------------------------------     																									
														

#78Дано целое число. Найти произведение его цифр
task78=->{
    n=2456
    result= 1;
    while n != 0    
        result *= n%10;
        n /= 10;    
    end
    puts result
    }

#24--------------------------------------------------------------------------------------------------------------------------------------------------

																									
#33Дан целочисленный массив. Найти индекс минимального элемента.
task33=->{
    arr = [58,25,11,-8,4,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    puts arr.find_index(arr.min)}

#25------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#34Дан целочисленный массив. Найти индекс максимального элемента.	
task34=->{
    arr = [58,25,11,-8,4,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    puts arr.find_index(arr.max)
    }

#26----------------------------------------------------------------------------------------------------------------------------------------------------------
 
#35Дан целочисленный массив. Найти индекс первого минимального элемента.
task35=->{
    arr = [58,-30,25,11,-8,4,-30,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    puts arr.find_index(arr.min) 
    }

#27---------------------------------------------------------------------------------------------------------------------------------------------------------------------

#36Дан целочисленный массив. Найти индекс первого максимального элемента.
task36=->{
    arr = [58,-30,25,11,-8,4,-30,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    puts arr.index(arr.max) 
    }

#28------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#37Дан целочисленный массив. Найти индекс последнего минимального элемента.	
task37=->{
    arr = [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    puts arr.rindex(arr.min) 
    }


#29----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
																							
#49Дан целочисленный массив. Найти количество элементов, расположенных перед первым минимальным.	
task49=->{
    arr = [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    puts arr.rindex(arr.min) 
    }

#30----------------------------------------------------------------------------------------------------------------------------------------------

#50Дан целочисленный массив. Найти количество элементов, расположенных перед первым максимальным.	
task50=->{
    arr = [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    puts arr.index(arr.max) 
    }

#31-----------------------------------------------------------------------------------------------------------------------------------------------------------

#51Дан целочисленный массив. Найти количество элементов, расположенных после первого максимального.
task51=->{
    arr = [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]																									
    puts arr.size- arr.index(arr.max)-1
    
    }
 
#32----------------------------------------------------------------------------------------------------------------------------------------------------

#52Дан целочисленный массив. Найти количество элементов, расположенных после первого минимального .	
task52=->{
    arr = [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]																									
    puts arr.size- arr.index(arr.min)-1
    
    }

#33--------------------------------------------------------------------------------------------------------------------------------------------------------

#53Дан целочисленный массив. Найти количество элементов, расположенных перед последним максимальным.
task53=->{
    arr = [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    puts arr.rindex(arr.max) 
    }


#34---------------------------------------------------------------------------------------------------------------------------------------------------------

#54Дан целочисленный массив. Найти количество элементов, расположенных перед последним минимальным.		
task54=->{
    arr = [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    puts arr.rindex(arr.min) 
    }

#35---------------------------------------------------------------------------------------------------------------------------------------------------------

#55Дан целочисленный массив. Найти количество элементов, расположенных после последнего максимального.
task54=->{
    arr = [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    puts arr.size- arr.rindex(arr.max)-1
    }

#36----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#56Дан целочисленный массив. Найти количество элементов, расположенных после последнего минимального .
task54=->{
    arr = [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    puts arr.size - arr.rindex(arr.min)-1
    }


#37---------------------------------------------------------------------------------------------------------------------------------------

#25Дан целочисленный массив. Преобразовать его, вставив перед каждым положительным элементом нулевой элемент.	
task25=->{
    arr = [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    el0 = arr.first.to_s
    arr.map!{|el| el > 0 ? el0 + el.to_s : el.to_s}
    puts arr
    }

#38----------------------------------------------------------------------------------------------------------------------------------------------------------

#26Дан целочисленный массив. Преобразовать его, вставив перед каждым отрицательным элементом нулевой элемент.
task26=->{
    arr = [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    el0 = arr.first.to_s
    arr.map!{|el| el<0 ? el0 + el.to_s : el.to_s}
    puts arr
    }

#39-------------------------------------------------------------------------------------------------------------------------------------------------------------

#27Дан целочисленный массив. Преобразовать его, вставив после каждого положительного элемента нулевой элемент.
task27=->{
    arr = [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    el0 = arr.first.to_s
    arr.map!{|el| el>0 ? el.to_s + el0 : el.to_s}
    puts arr
    }   

#40-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#28Дан целочисленный массив. Преобразовать его, вставив после каждого отрицательного элемента нулевой элемент.	
task28=->{
    arr = [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    el0 = arr.first.to_s
    arr.map!{|el| el<0 ? el.to_s + el0 : el.to_s}
    puts arr
    }

#41---------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#97Дан целочисленный массив и число К. Вывести индекс последнего элемента, меньшего К.
task97=->{	  
    arr = [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    k = gets.chomp.to_i
    puts arr.rindex {|el| el < k} 
    }

#42-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#96Дан целочисленный массив и число К. Вывести индекс первого элемента, большего К.	

task96=->{	  
    arr = [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    k = gets.chomp.to_i
    puts arr.rindex {|el| el > k} 
    }

#43--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#95Дан целочисленный массив и число К. Вывести количество элементов, меньших К.
task95=->{	  
    arr = [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    number = gets.chomp.to_i
    puts arr.count {|el| el<number}
 }

#44-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    
#57Дан целочисленный массив. Найти индекс первого экстремального (то есть минимального или максимального) элемента.																									
task57=->{
    arr = [8,-30,25,11,-8,4,-30,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    f = [arr.min, arr.max]
    puts arr.index {|el| f.include? el} 
    }

#45---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#58Дан целочисленный массив. Найти индекс последнего экстремального (то есть минимального или максимального) элемента.	
task58=->{
    arr = [58,-30,25,11,-8,4,-30,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    puts arr.rindex {|el| el == arr.max or el == arr.min}  
    }

#46-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#71Дан целочисленный массив. Удалить все элементы, встречающиеся менее двух раз.
task71=->{
    arr = [58,25,18,-40,11,-8,4,18,-15,6,49, 0,18,-40,58,11,18,18,36,-25,6,10,-4,11,-15,58,-4,-40]
    puts arr.filter_map {|el| el if arr.count(el)<2}
    }
 
#47-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#72Дан целочисленный массив. Удалить все элементы, встречающиеся более двух раз.																									
task72=->{
    arr = [58,25,18,-40,11,-8,4,18,-15,6,49, 0,18,-40,58,11,18,18,36,-25,6,10,-4,11,-15,58,-4,-40]
    puts arr.filter_map {|el| el if arr.count(el)>2}
    }

#48-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
#73Дан целочисленный массив. Удалить все элементы, встречающиеся ровно два раза.
task73=->{
    arr = [58,25,18,-40,11,-8,4,18,-15,6,49, 0,18,-40,58,11,18,18,36,-25,6,10,-4,11,-15,58,-4,-40]
    puts arr.filter_map {|el| el if arr.count(el)==2}
    }	

#49------------------------------------------------------------------------------------------------------------------------------------------------------------

#74Дан целочисленный массив. Удалить все элементы, встречающиеся ровно три раза.		
task74=->{
    arr = [58,25,18,-40,11,-8,4,18,-15,6,49, 0,18,-40,58,11,18,18,36,-25,6,10,-4,11,-15,58,-4,-40]
    puts arr.filter_map {|el| el if arr.count(el)==3}
    }	


#50------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#76Дан целочисленный массив. Найти среднее арифметическое квадратов его элементов.																											
task76=->{
    arr = [58,25,18,-40,11,-8,4,18,-15,6,49, 0,18,-40,58,11,18,18,36,-25,6,10,-4,11,-15,58,-4,-40]
    puts arr.map {|e| e**2} .sum / arr.size
    }
    