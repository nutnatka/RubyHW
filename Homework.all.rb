
#1. Дан целочисленный массив. Необходимо вывести вначале его элементы с четными индексами, а затем - с нечетными.
task1=->{
    arr = [10,11,12,13,14,15,16,17,18,19]
    puts "----------------------
    #1. Дан целочисленный массив. Необходимо вывести вначале его элементы с четными индексами, а затем - с нечетными.
    #{arr.to_s}
    result:"
    for i in 0...arr.length do
        next if !i.even?
        puts "#{i} - #{arr[i]}"
    end
    for i in 0...arr.length do
        next if i.even?
        puts "#{i} - #{arr[i]}" if !i.even?
    end
    }
#2
=begin
arr = [10,11,12,13,14,15,16,17,18,19]
arr.each_with_index {|el, i| puts el if i.even?}
arr.each_with_index {|el, i| puts el if !i.even?} 
=end
task1.call
#2------------------------------------------------------------------------------------------

#2Дан целочисленный массив. Необходимо вывести вначале его элементы с нечетными индексами, а затем - четными.	
task2=->{
    arr = [10,11,12,13,14,15,16,17,18,19]
    puts "----------------------
    #2Дан целочисленный массив. Необходимо вывести вначале его элементы с нечетными индексами, а затем - четными.
    #{arr.to_s}
    result:"
    for i in 0...arr.length do
        next if i.even?
        puts  "#{i} - #{arr[i]}" if !i.even?
    end
    for i in 0...arr.length do
        next if !i.even?
        puts  "#{i} - #{arr[i]}"
    end
     }	

#2
=begin
arr = [10,11,12,13,14,15,16,17,18,19]
arr.each_with_index {|el, i| puts el if !i.even?} 
arr.each_with_index {|el, i| puts el if i.even?}
=end
task2.call
#3-----------------------------------------------------------------------------------------------------------------------

# 86. Дан целочисленный массив. Найти среднее арифметическое его элементов.	
task86=->{
    arr = [10,11,12,13,14,15,16,17,18,19]
    n = 0
    arr.each do |it|
        n = it + n
    end 
    z=n/arr.length
    result = z  
    puts "----------------------
    # 86. Дан целочисленный массив. Найти среднее арифметическое его элементов.
    #{arr.to_s}
    result: #{result}"	
    }
task86.call
#4-----------------------------------------------------------------------------------------------------------------------

#88.Дан целочисленный массив. Найти количество четных элементов.
task88=->{
    arr = [10,11,12,13,14,15,16,17,18,19]
    n=0
    arr.each {|el| n+=1 if el.even?}
    result = n
    puts "----------------------
    #88.Дан целочисленный массив. Найти количество четных элементов.
    #{arr.to_s}
    result: #{result}"
    }
task88.call
#5--------------------------------------------------------------------------------------------------------------------------------

#75Дан целочисленный массив. Найти среднее арифметическое модулей его элементов
task75=->{
    arr = [10,11,12,13,14,15,16,17,18,19]
    n = 0
    arr.each do |it|
        n = it + n.abs
    end 
    z=n.abs/arr.length
    result = z
    puts "----------------------
    #75Дан целочисленный массив. Найти среднее арифметическое модулей его элементов
    #{arr.to_s}
    result: #{result}"
    }
task75.call
#6---------------------------------------------------------------------------------------------------------------------------------------

#90.Дан целочисленный массив. Найти количество нечетных элементов.	
task90=->{
    arr = [10,11,12,13,14,15,16,17,18,19]
    n=0
    arr.each {|el| n+=1 if !el.even?}
    result = n
    puts "----------------------
    #90.Дан целочисленный массив. Найти количество нечетных элементов.
    #{arr.to_s}
    result: #{result}"
    }
task90.call
#7-----------------------------------------------------------------------------------------------------------------------------------------------------

#29Дан целочисленный массив. Упорядочить его по возрастанию.	
task29=->{
    arr = [25,11,-8,4,18,-15,49,36,-25,6,10,-4,58]
    arr =arr.sort
    result = arr
    puts "----------------------
    #29Дан целочисленный массив. Упорядочить его по возрастанию.
    #{arr.to_s}
    result: #{result}"
    }
task29.call
#8------------------------------------------------------------------------------------------------------------------------------

#9Дан целочисленный массив. Заменить все положительные элементы на значение минимального.
task9=->{
    arr = [25,11,-8,4,18,-15,49,36,-25,6,10,-4,58]
    min = arr[0]
    arr.each { |n| 
        if n< min; min = n end
    }
    puts min
    arr.each_with_index {|el,i| if el>0; arr[i]=min  end }
    result = arr
    puts "----------------------
    #9Дан целочисленный массив. Заменить все положительные элементы на значение минимального.
    #{arr.to_s}
    result: #{result}"
    }
task9.call
#9---------------------------------------------------------------------------------------------------------------------------------------------------------

#30Дан целочисленный массив. Упорядочить его по убыванию.	
task30=->{
    arr = [25,11,-8,4,18,-15,49,36,-25,6,10,-4,58]
    result = arr.sort.reverse
    puts "----------------------
    #30Дан целочисленный массив. Упорядочить его по убыванию.
    #{arr.to_s}
    result: #{result}"
    }
task30.call
#10----------------------------------------------------------------------------------------------------------------------------------------------------

#10Дан целочисленный массив. Заменить все положительные элементы на значение максимального.	
task10=->{
    arr = [25,11,-8,4,18,-15,49,36,-25,6,10,-4,58]
    max = arr[0]
    arr.each { |n| 
        if n> max; max = n end
    }
    puts max
    arr.each_with_index {|el,i| if el<0; arr[i]=max  end }
    result = arr
    puts "----------------------
    #10Дан целочисленный массив. Заменить все положительные элементы на значение максимального.	
    #{arr.to_s}
    result: #{result}"
    }
task10.call
#11-----------------------------------------------------------------------------------------------------------------------------------------------------------

#12Дан целочисленный массив. Заменить все отрицательные элементы на значение минимального.	
task12=->{
    arr = [25,11,-8,4,18,-15,49,36,-25,6,10,-4,58]
    min = arr[0]
    arr.each { |n| 
        if n< min; min = n end
    }
    puts min
    arr.each_with_index {|el,i| if el<0; arr[i]=min  end }
    result = arr
    puts "----------------------
    #12Дан целочисленный массив. Заменить все отрицательные элементы на значение минимального.
    #{arr.to_s}
    result: #{result}"
    }
task12.call
#12--------------------------------------------------------------------------------------------------------------------------------------------------------

#13Дан целочисленный массив. Заменить все отрицательные элементы на значение максимального.	
task13=->{
    arr = [25,11,-8,4,18,-15,49,36,-25,6,10,-4,58]
    max = arr[0]
    arr.each { |n| 
        if n>max; max = n end
    }
    puts max
    arr.each_with_index {|el,i| if el<0; arr[i]=max end }
    result = arr
    puts "----------------------
    #13Дан целочисленный массив. Заменить все отрицательные элементы на значение максимального.	
    #{arr.to_s}
    result: #{result}"
    }
task13.call
#13---------------------------------------------------------------------------------------------------------------------------------------------------

#38Дан целочисленный массив. Найти индекс последнего максимального элемента.
task38=->{
    arr = [58,25,11,-8,4,18,-15,49,36,-25,6,10,-4,58]
    index=0	
    max = arr [index]
    arr.each_with_index {|el,i| if el>=max; index=i; max = el end}
    result = index
    puts "----------------------
    #38Дан целочисленный массив. Найти индекс последнего максимального элемента.
    #{arr.to_s}
    result: #{result}"
     }
task38.call
#14-------------------------------------------------------------------------------------------------------------------------------------------------------------

#77Дано целое число. Найти сумму его цифр.		
task77=->{
    n=258
    result= 0;
    while n>0    
        result = result + n%10;
        n = n/10;    
    end
    result = result
    puts "----------------------
    #77Дано целое число. Найти сумму его цифр.
    n=258
    result: #{result}"	
    }
task77.call
#15-----------------------------------------------------------------------------------------------------------------------------

#39Дан целочисленный массив. Найти количество минимальных элементов.
task39=->{
    arr = [58,25,11,-8,4,18,-15,49,36,-25,6,10,-4,58,-25]
    min=arr[0]
    count=0
    arr.each {|el| if el<min; min=el; end}
    arr.each {|el| if el==min; count = count +1; end}
    result = count
    puts "----------------------
    #39Дан целочисленный массив. Найти количество минимальных элементов.
    #{arr.to_s}
    result: #{result}"
     }
task39.call
#16--------------------------------------------------------------------------------------------------------------------------------------------

#40Дан целочисленный массив. Найти количество максимальных элементов.
task40=->{
    arr = [58,25,11,-8,4,18,-15,49,36,-25,6,10,-4,58,-25]
    result = arr.keep_if{|el| el < arr.max}.count
    puts "----------------------
    #40Дан целочисленный массив. Найти количество максимальных элементов.
    #{arr.to_s}
    result: #{result}"
     }
task40.call
#17----------------------------------------------------------------------------------------------------------------------------------------------------


#42Дан целочисленный массив. Найти минимальный нечетный элемент.
task42=->{
    arr = [58,25,11,-8,4,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    result = arr.find_all(&:odd?).min
    puts "----------------------
    #42Дан целочисленный массив. Найти минимальный нечетный элемент.
    [58,25,11,-8,4,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    result: #{result}"
    }
task42.call
#18------------------------------------------------------------------------------------------------------------------------------------------------------------

#5Дан целочисленный массив. Преобразовать его, прибавив к четным числам первый элемент. Первый и последний элементы массива не изменять.	
task5 = -> {
    arr = [58,25,11,-8,4,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    result=arr.map! {|el| el+= arr.first if el.even? {el+=5}}
    print arr, " "
    puts "----------------------
    #5Дан целочисленный массив. Преобразовать его, прибавив к четным числам первый элемент. Первый и последний элементы массива не изменять.
    [58,25,11,-8,4,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    result: #{result}"
    }
task5.call
#19-------------------------------------------------------------------------------------------------------------------------------------------------------

#46Дан целочисленный массив. Найти максимальный отрицательный элемент.
task46 = -> {
    arr = [58,25,11,-8,4,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    result = arr.filter{|el| el < 0}.max
    puts "----------------------
    #46Дан целочисленный массив. Найти максимальный отрицательный элемент.
    [58,25,11,-8,4,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    result: #{result}"
     }
task46.call
#20-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#43Дан целочисленный массив. Найти минимальный четный элемент.	
task43 = ->{
    arr = [58,25,11,-8,4,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    result = arr.filter {|el| el.even?}.min
    puts "----------------------
    #43Дан целочисленный массив. Найти минимальный четный элемент.
    [58,25,11,-8,4,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    result: #{result}"
     }
task43.call
#21-----------------------------------------------------------------------------------------------------------------------------------------------

#45Дан целочисленный массив. Найти минимальный положительный элемент.
task45 = ->{
    arr = [58,25,11,-8,4,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    result = arr.filter {|el| el>0}.max
    puts "----------------------
    #45Дан целочисленный массив. Найти минимальный положительный элемент.
    [58,25,11,-8,4,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    result: #{result}"
     }
task45.call
#22---------------------------------------------------------------------------------------------------------------------------------------------

#42Дан целочисленный массив. Найти максимальный нечетный элемент.
task42 = ->{
    arr = [58,25,11,-8,4,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    arr2 = arr.filter {|el| !el.even?}
    result = arr2.max
    puts "----------------------
    #42Дан целочисленный массив. Найти максимальный нечетный элемент.
    [58,25,11,-8,4,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    result: #{result}"
     }
task42.call
     																								
#23-------------------------------------------------------------------------------------------------------------------------------------------------     																									
														

#78Дано целое число. Найти произведение его цифр
task78=->{
    n=2456
    result= 1;
    while n != 0   
        result *= n%10;
        n /= 10;    
    end
    result = result
    puts "----------------------
    #78Дано целое число. Найти произведение его цифр
    n=2456
    result: #{result}"
    }
task78.call
#24--------------------------------------------------------------------------------------------------------------------------------------------------
																									
#33Дан целочисленный массив. Найти индекс минимального элемента.
task33=->{
    arr = [58,25,11,-8,4,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    result = arr.find_index(arr.min)
    puts "----------------------
    #33Дан целочисленный массив. Найти индекс минимального элемента.
    [58,25,11,-8,4,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    result: #{result}"
    }
task33.call
#25------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#34Дан целочисленный массив. Найти индекс максимального элемента.	
task34=->{
    arr = [58,25,11,-8,4,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    result = arr.find_index(arr.max)
    puts "----------------------
    #34Дан целочисленный массив. Найти индекс максимального элемента.
    [58,25,11,-8,4,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    result: #{result}"
    }
task34.call
#26----------------------------------------------------------------------------------------------------------------------------------------------------------
 
#35Дан целочисленный массив. Найти индекс первого минимального элемента.
task35=->{
    arr = [58,-30,25,11,-8,4,-30,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    result = arr.find_index(arr.min) 
    puts "---------------------- 
    #35Дан целочисленный массив. Найти индекс первого минимального элемента.
    [58,-30,25,11,-8,4,-30,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    result: #{result}"
    }
task35.call
#27---------------------------------------------------------------------------------------------------------------------------------------------------------------------

#36Дан целочисленный массив. Найти индекс первого максимального элемента.
task36=->{
    arr = [58,-30,25,11,-8,4,-30,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    result = arr.index(arr.max) 
    puts "---------------------- 
    #36Дан целочисленный массив. Найти индекс первого максимального элемента.
    [58,-30,25,11,-8,4,-30,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    result: #{result}"
    }
task36.call
#28------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#37Дан целочисленный массив. Найти индекс последнего минимального элемента.	
task37=->{
    arr = [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    result = arr.rindex(arr.min) 
    puts "---------------------- 
    #37Дан целочисленный массив. Найти индекс последнего минимального элемента.	
    [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    result: #{result}"
    }

task37.call
#29----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
																							
#49Дан целочисленный массив. Найти количество элементов, расположенных перед первым минимальным.	
task49=->{
    arr = [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    result = arr.rindex(arr.min)
    puts "---------------------- 
    #49Дан целочисленный массив. Найти количество элементов, расположенных перед первым минимальным.
    [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    result: #{result}"
    }
task49.call
#30----------------------------------------------------------------------------------------------------------------------------------------------

#50Дан целочисленный массив. Найти количество элементов, расположенных перед первым максимальным.	
task50=->{
    arr = [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    result = arr.index(arr.max) 
    puts "---------------------- 
    #50Дан целочисленный массив. Найти количество элементов, расположенных перед первым максимальным.
    [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    result: #{result}"	
     }
task50.call
#31-----------------------------------------------------------------------------------------------------------------------------------------------------------

#51Дан целочисленный массив. Найти количество элементов, расположенных после первого максимального.
task51=->{
    arr = [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]																									
    result = arr.size- arr.index(arr.max)-1
    puts "---------------------- 
    #51Дан целочисленный массив. Найти количество элементов, расположенных после первого максимального.
    [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    result: #{result}"	
    }
task51.call
#32----------------------------------------------------------------------------------------------------------------------------------------------------

#52Дан целочисленный массив. Найти количество элементов, расположенных после первого минимального .	
task52=->{
    arr = [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]																									
    result = arr.size- arr.index(arr.min)-1
    puts "---------------------- 
    #52Дан целочисленный массив. Найти количество элементов, расположенных после первого минимального.
    [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]	
    result: #{result}"
    }
task52.call
#33--------------------------------------------------------------------------------------------------------------------------------------------------------

#53Дан целочисленный массив. Найти количество элементов, расположенных перед последним максимальным.
task53=->{
    arr = [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    result = arr.rindex(arr.max) 
    puts "---------------------- 
    #53Дан целочисленный массив. Найти количество элементов, расположенных перед последним максимальным.
    [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    result: #{result}"
    }
task53.call   

#34---------------------------------------------------------------------------------------------------------------------------------------------------------

#54Дан целочисленный массив. Найти количество элементов, расположенных перед последним минимальным.		
task54=->{
    arr = [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    result = arr.rindex(arr.min)
    puts "---------------------- 
    #54Дан целочисленный массив. Найти количество элементов, расположенных перед последним минимальным.	
    [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    result: #{result}"
    }
task54.call
#35---------------------------------------------------------------------------------------------------------------------------------------------------------

#55Дан целочисленный массив. Найти количество элементов, расположенных после последнего максимального.
task55=->{
    arr = [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    result = arr.size- arr.rindex(arr.max)-1
    puts "----------------------
    #55Дан целочисленный массив. Найти количество элементов, расположенных после последнего максимального.
    [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    result: #{result}"
    }
task55.call
#36----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#56Дан целочисленный массив. Найти количество элементов, расположенных после последнего минимального .
task56=->{
    arr = [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    result = arr.size - arr.rindex(arr.min)-1
    puts "----------------------
    #56Дан целочисленный массив. Найти количество элементов, расположенных после последнего минимального.
    [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    result: #{result}"
    }

task56.call
#37---------------------------------------------------------------------------------------------------------------------------------------

#25Дан целочисленный массив. Преобразовать его, вставив перед каждым положительным элементом нулевой элемент.	
task25=->{
    arr = [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    el0 = arr.first.to_s
    arr.map!{|el| el > 0 ? el0 + el.to_s : el.to_s}
    result = arr
    puts "----------------------
    #25Дан целочисленный массив. Преобразовать его, вставив перед каждым положительным элементом нулевой элемент.
    [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    result: #{result}"
    }
task25.call
#38----------------------------------------------------------------------------------------------------------------------------------------------------------

#26Дан целочисленный массив. Преобразовать его, вставив перед каждым отрицательным элементом нулевой элемент.
task26=->{
    arr = [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    el0 = arr.first.to_s
    arr.map!{|el| el<0 ? el0 + el.to_s : el.to_s}
    result = arr
    puts "----------------------
    #26Дан целочисленный массив. Преобразовать его, вставив перед каждым отрицательным элементом нулевой элемент.
    [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    result: #{result}"
    }
task26.call

#39-------------------------------------------------------------------------------------------------------------------------------------------------------------

#27Дан целочисленный массив. Преобразовать его, вставив после каждого положительного элемента нулевой элемент.
task27=->{
    arr = [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    el0 = arr.first.to_s
    arr.map!{|el| el>0 ? el.to_s + el0 : el.to_s}
    result = arr
    puts "----------------------
    #27Дан целочисленный массив. Преобразовать его, вставив после каждого положительного элемента нулевой элемент.
    [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    result: #{result}"
    }   
task27.call
#40-------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#28Дан целочисленный массив. Преобразовать его, вставив после каждого отрицательного элемента нулевой элемент.	
task28=->{
    arr = [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    el0 = arr.first.to_s
    arr.map!{|el| el<0 ? el.to_s + el0 : el.to_s}
    result = arr
    puts "----------------------
    #28Дан целочисленный массив. Преобразовать его, вставив после каждого отрицательного элемента нулевой элемент.	
    [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    result: #{result}"
    }
task28.call
#41---------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#97Дан целочисленный массив и число К. Вывести индекс последнего элемента, меньшего К.
task97=->{	  
    arr = [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    #k = gets.chomp.to_i
    k=2
    result = arr.rindex {|el| el < k} 
    puts "----------------------
    #97Дан целочисленный массив и число К. Вывести индекс последнего элемента, меньшего К.
    [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    result: #{result}"
    }
task97.call
#42-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#96Дан целочисленный массив и число К. Вывести индекс первого элемента, большего К.	

task96=->{	  
    arr = [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    #k = gets.chomp.to_i
    k=2
    result =  arr.rindex {|el| el > k} 
    puts "----------------------
    #96Дан целочисленный массив и число К. Вывести индекс первого элемента, большего К.	
    [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    result: #{result}"
    }
task96.call
#43--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#95Дан целочисленный массив и число К. Вывести количество элементов, меньших К.
task95=->{	  
    arr = [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    #number = gets.chomp.to_i
    k=2
    result = arr.count {|el| el<k}
    puts "----------------------
    #95Дан целочисленный массив и число К. Вывести количество элементов, меньших К.
    [58,25,11,-8,4,18,-15,49, 0,-40,36,-25,6,10,-4,58,-4,-40]
    result: #{result}"
     }
task95.call
#44-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    
#57Дан целочисленный массив. Найти индекс первого экстремального (то есть минимального или максимального) элемента.																									
task57=->{
    arr = [8,-30,25,11,-8,4,-30,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    f = [arr.min, arr.max]
    result = arr.index {|el| f.include? el}
    puts "---------------------- 
    #57Дан целочисленный массив. Найти индекс первого экстремального (то есть минимального или максимального) элемента.
    [8,-30,25,11,-8,4,-30,18,-15,49,36,-25,6,10,-4,58,-25,-30]	
    result: #{result}"
    }
task57.call
#45---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#58Дан целочисленный массив. Найти индекс последнего экстремального (то есть минимального или максимального) элемента.	
task58=->{
    arr = [58,-30,25,11,-8,4,-30,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    result = arr.rindex {|el| el == arr.max or el == arr.min}  
    puts "----------------------
    #58Дан целочисленный массив. Найти индекс последнего экстремального (то есть минимального или максимального) элемента.	
    [58,-30,25,11,-8,4,-30,18,-15,49,36,-25,6,10,-4,58,-25,-30]
    result: #{result}"
    }
task58.call
#46-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#71Дан целочисленный массив. Удалить все элементы, встречающиеся менее двух раз.
task71=->{
    arr = [58,25,18,-40,11,-8,4,18,-15,6,49, 0,18,-40,58,11,18,18,36,-25,6,10,-4,11,-15,58,-4,-40]
    result = arr.filter_map {|el| el if arr.count(el)<2}
    puts "----------------------
    #71Дан целочисленный массив. Удалить все элементы, встречающиеся менее двух раз.
    [58,25,18,-40,11,-8,4,18,-15,6,49, 0,18,-40,58,11,18,18,36,-25,6,10,-4,11,-15,58,-4,-40]
    result: #{result}"
    }

task71.call
 
#47-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

#72Дан целочисленный массив. Удалить все элементы, встречающиеся более двух раз.																									
task72=->{
    arr = [58,25,18,-40,11,-8,4,18,-15,6,49, 0,18,-40,58,11,18,18,36,-25,6,10,-4,11,-15,58,-4,-40]
    result = arr.filter_map {|el| el if arr.count(el)>2}
    puts"-------------------------------------
    #72Дан целочисленный массив. Удалить все элементы, встречающиеся более двух раз.
    [58,25,18,-40,11,-8,4,18,-15,6,49, 0,18,-40,58,11,18,18,36,-25,6,10,-4,11,-15,58,-4,-40]
    result: #{result}"
     }

task72.call
#48-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 
#73Дан целочисленный массив. Удалить все элементы, встречающиеся ровно два раза.
task73=->{
    arr = [58,25,18,-40,11,-8,4,18,-15,6,49, 0,18,-40,58,11,18,18,36,-25,6,10,-4,11,-15,58,-4,-40]
    result = arr.filter_map {|el| el if arr.count(el)==2}
    puts"-------------------------------------
    #73Дан целочисленный массив. Удалить все элементы, встречающиеся ровно два раза.
    [58,25,18,-40,11,-8,4,18,-15,6,49, 0,18,-40,58,11,18,18,36,-25,6,10,-4,11,-15,58,-4,-40]
    result: #{result}"
    }

task73.call
#49------------------------------------------------------------------------------------------------------------------------------------------------------------

#74Дан целочисленный массив. Удалить все элементы, встречающиеся ровно три раза.		
task74=->{
    arr = [58,25,18,-40,11,-8,4,18,-15,6,49, 0,18,-40,58,11,18,18,36,-25,6,10,-4,11,-15,58,-4,-40]
    result = arr.filter_map {|el| el if arr.count(el)==3}
    puts"-------------------------------------
    #74Дан целочисленный массив. Удалить все элементы, встречающиеся ровно три раза.
    [58,25,18,-40,11,-8,4,18,-15,6,49, 0,18,-40,58,11,18,18,36,-25,6,10,-4,11,-15,58,-4,-40]
    result: #{result}"
    }

task74.call
#------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#76Дан целочисленный массив. Найти среднее арифметическое квадратов его элементов.																											
task76=->{
    arr = [58,25,18,-40,11,-8,4,18,-15,6,49, 0,18,-40,58,11,18,18,36,-25,6,10,-4,11,-15,58,-4,-40]
    result = arr.map {|e| e**2} .sum / arr.size
    puts "----------------------
    #76Дан целочисленный массив. Найти среднее арифметическое квадратов его элементов.
    [58,25,18,-40,11,-8,4,18,-15,6,49, 0,18,-40,58,11,18,18,36,-25,6,10,-4,11,-15,58,-4,-40]
    result: #{result}"
    }

task76.call
    