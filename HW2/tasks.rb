#1. Дан целочисленный массив. Необходимо вывести вначале его элементы с четными индексами, а затем - с нечетными.
arr = [10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
arr.each_with_index { |el, i| puts el if i.even? }
arr.each_with_index { |el, i| puts el if !i.even? }
puts arr

#2----------------------------------------------------------------------------------------------------------------------

#2Дан целочисленный массив. Необходимо вывести вначале его элементы с нечетными индексами, а затем - четными.	
arr = [10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
arr.each_with_index { |el, i| puts el if !i.even? }
arr.each_with_index { |el, i| puts el if i.even? }
puts arr
#3----------------------------------------------------------------------------------------------------------------------

# 86. Дан целочисленный массив. Найти среднее арифметическое его элементов.
arr = [10,11,12,13,14,15,16,17,18,19]
puts arr.sum/ arr.size.to_f
- -----------------------------------------------------------------------------------------------------------

#88.Дан целочисленный массив. Найти количество четных элементов.
arr = [10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
n = 0
arr.each { |el| n += 1 if el.even? }
result = n
puts result
#5----------------------------------------------------------------------------------------------------------------------

#75Дан целочисленный массив. Найти среднее арифметическое модулей его элементов
arr = [10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
n = 0
arr.each do |it|
  n = it + n.abs
end
z = n.abs / arr.length
result = z
puts result
#6----------------------------------------------------------------------------------------------------------------------

#90.Дан целочисленный массив. Найти количество нечетных элементов.	
arr = [10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
n = 0
arr.each { |el| n += 1 if !el.even? }
result = n
puts result
#7----------------------------------------------------------------------------------------------------------------------

#29Дан целочисленный массив. Упорядочить его по возрастанию.	
arr = [25, 11, -8, 4, 18, -15, 49, 36, -25, 6, 10, -4, 58]
arr = arr.sort
result = arr
puts result
#8----------------------------------------------------------------------------------------------------------------------

#9Дан целочисленный массив. Заменить все положительные элементы на значение минимального.
arr = [25, 11, -8, 4, 18, -15, 49, 36, -25, 6, 10, -4, 58]
min = arr[0]
arr.each { |n|
  if n < min;
    min = n
  end
}
puts min
arr.each_with_index { |el, i|
  if el > 0;
    arr[i] = min
  end }
result = arr
puts result
#9----------------------------------------------------------------------------------------------------------------------

#30Дан целочисленный массив. Упорядочить его по убыванию.	
arr = [25, 11, -8, 4, 18, -15, 49, 36, -25, 6, 10, -4, 58]
result = arr.sort.reverse
puts result

#10---------------------------------------------------------------------------------------------------------------------
#10Дан целочисленный массив. Заменить все положительные элементы на значение максимального.	
arr = [25, 11, -8, 4, 18, -15, 49, 36, -25, 6, 10, -4, 58]
max = arr[0]
arr.each { |n|
  if n > max;
    max = n
  end
}
puts max
arr.each_with_index { |el, i|
  if el < 0;
    arr[i] = max
  end }
result = arr
puts result
#11---------------------------------------------------------------------------------------------------------------------

#12Дан целочисленный массив. Заменить все отрицательные элементы на значение минимального.	
arr = [25, 11, -8, 4, 18, -15, 49, 36, -25, 6, 10, -4, 58]
min = arr[0]
arr.each { |n|
  if n < min;
    min = n
  end
}
puts min
arr.each_with_index { |el, i|
  if el < 0;
    arr[i] = min
  end }
result = arr
puts result
#12---------------------------------------------------------------------------------------------------------------------

#13Дан целочисленный массив. Заменить все отрицательные элементы на значение максимального.	
arr = [25, 11, -8, 4, 18, -15, 49, 36, -25, 6, 10, -4, 58]
max = arr[0]
arr.each { |n|
  if n > max;
    max = n
  end
}
puts max
arr.each_with_index { |el, i|
  if el < 0;
    arr[i] = max
  end }
result = arr
puts result

#13---------------------------------------------------------------------------------------------------------------------

#38Дан целочисленный массив. Найти индекс последнего максимального элемента.
arr = [58, 25, 11, -8, 4, 18, -15, 49, 36, -25, 6, 10, -4, 58]
index = 0
max = arr [index]
arr.each_with_index { |el, i|
  if el >= max;
    index = i; max = el
  end }
result = index
puts result
#14---------------------------------------------------------------------------------------------------------------------

#77Дано целое число. Найти сумму его цифр.		
n = 258
result = 0;
while n > 0
  result = result + n % 10;
  n = n / 10;
end
result = result
puts result
#15---------------------------------------------------------------------------------------------------------------------

#39Дан целочисленный массив. Найти количество минимальных элементов.
arr = [58, 25, 11, -8, 4, 18, -15, 49, 36, -25, 6, 10, -4, 58, -25]
min = arr[0]
count = 0
arr.each { |el|
  if el < min;
    min = el;
  end }
arr.each { |el|
  if el == min;
    count = count +1;
  end }
result = count
puts result
#16---------------------------------------------------------------------------------------------------------------------

#40Дан целочисленный массив. Найти количество максимальных элементов.
arr = [58, 25, 11, -8, 4, 18, -15, 49, 36, -25, 6, 10, -4, 58, -25]
result = arr.keep_if { |el| el < arr.max }.count
puts result
#17---------------------------------------------------------------------------------------------------------------------

#42Дан целочисленный массив. Найти минимальный нечетный элемент.
arr = [58, 25, 11, -8, 4, 18, -15, 49, 36, -25, 6, 10, -4, 58, -25, -30]
result = arr.find_all(&:odd?).min
puts result
#18---------------------------------------------------------------------------------------------------------------------

#5Дан целочисленный массив. Преобразовать его, прибавив к четным числам первый элемент. Первый и последний элементы массива не изменять.	
arr = [58, 25, 11, -8, 4, 18, -15, 49, 36, -25, 6, 10, -4, 58, -25, -30]
result = arr.map { |el| el += arr.first if el.even?; el }
result[0] = arr.first
result[-1] = arr.last
puts result
#19---------------------------------------------------------------------------------------------------------------------

#46Дан целочисленный массив. Найти максимальный отрицательный элемент.
arr = [58, 25, 11, -8, 4, 18, -15, 49, 36, -25, 6, 10, -4, 58, -25, -30]
result = arr.filter { |el| el < 0 }.max
puts result
#20---------------------------------------------------------------------------------------------------------------------

#43Дан целочисленный массив. Найти минимальный четный элемент.	
arr = [58, 25, 11, -8, 4, 18, -15, 49, 36, -25, 6, 10, -4, 58, -25, -30]
result = arr.filter { |el| el.even? }.min
puts result
#21---------------------------------------------------------------------------------------------------------------------

#45Дан целочисленный массив. Найти минимальный положительный элемент.
arr = [58, 25, 11, -8, 4, 18, -15, 49, 36, -25, 6, 10, -4, 58, -25, -30]
result = arr.filter { |el| el > 0 }.max
puts result
#22---------------------------------------------------------------------------------------------------------------------

#42Дан целочисленный массив. Найти максимальный нечетный элемент.
arr = [58, 25, 11, -8, 4, 18, -15, 49, 36, -25, 6, 10, -4, 58, -25, -30]
arr2 = arr.filter { |el| !el.even? }
result = arr2.max
puts result
#23---------------------------------------------------------------------------------------------------------------------

#78Дано целое число. Найти произведение его цифр
n = 2456
result = 1;
while n != 0
  result *= n % 10;
  n /= 10;
end
result = result
puts result
#24---------------------------------------------------------------------------------------------------------------------

#33Дан целочисленный массив. Найти индекс минимального элемента.
arr = [58, 25, 11, -8, 4, 18, -15, 49, 36, -25, 6, 10, -4, 58, -25, -30]
result = arr.find_index(arr.min)
puts result
#25---------------------------------------------------------------------------------------------------------------------

#34Дан целочисленный массив. Найти индекс максимального элемента.
arr = [58, 25, 11, -8, 4, 18, -15, 49, 36, -25, 6, 10, -4, 58, -25, -30]
result = arr.find_index(arr.max)
puts result
#26---------------------------------------------------------------------------------------------------------------------

#35Дан целочисленный массив. Найти индекс первого минимального элемента.
arr = [58, -30, 25, 11, -8, 4, -30, 18, -15, 49, 36, -25, 6, 10, -4, 58, -25, -30]
result = arr.find_index(arr.min)
puts result
#27---------------------------------------------------------------------------------------------------------------------

#36Дан целочисленный массив. Найти индекс первого максимального элемента.
arr = [58, -30, 25, 11, -8, 4, -30, 18, -15, 49, 36, -25, 6, 10, -4, 58, -25, -30]
result = arr.index(arr.max)
puts result

#28---------------------------------------------------------------------------------------------------------------------

#37Дан целочисленный массив. Найти индекс последнего минимального элемента.	
arr = [58, 25, 11, -8, 4, 18, -15, 49, 0, -40, 36, -25, 6, 10, -4, 58, -4, -40]
result = arr.rindex(arr.min)
puts result

#29---------------------------------------------------------------------------------------------------------------------

#49Дан целочисленный массив. Найти количество элементов, расположенных перед первым минимальным.	
arr = [58, 25, 11, -8, 4, 18, -15, 49, 0, -40, 36, -25, 6, 10, -4, 58, -4, -40]
result = arr.rindex(arr.min)
puts result

#30---------------------------------------------------------------------------------------------------------------------

#50Дан целочисленный массив. Найти количество элементов, расположенных перед первым максимальным.	

arr = [58, 25, 11, -8, 4, 18, -15, 49, 0, -40, 36, -25, 6, 10, -4, 58, -4, -40]
result = arr.index(arr.max)
puts result

#31---------------------------------------------------------------------------------------------------------------------

#51Дан целочисленный массив. Найти количество элементов, расположенных после первого максимального.
arr = [58, 25, 11, -8, 4, 18, -15, 49, 0, -40, 36, -25, 6, 10, -4, 58, -4, -40]
result = arr.size - arr.index(arr.max) - 1
puts result

#32---------------------------------------------------------------------------------------------------------------------

#52Дан целочисленный массив. Найти количество элементов, расположенных после первого минимального .
arr = [58, 25, 11, -8, 4, 18, -15, 49, 0, -40, 36, -25, 6, 10, -4, 58, -4, -40]
result = arr.size - arr.index(arr.min) - 1
puts result

#33---------------------------------------------------------------------------------------------------------------------

#53Дан целочисленный массив. Найти количество элементов, расположенных перед последним максимальным.
arr = [58, 25, 11, -8, 4, 18, -15, 49, 0, -40, 36, -25, 6, 10, -4, 58, -4, -40]
result = arr.rindex(arr.max)
puts result

#34---------------------------------------------------------------------------------------------------------------------

#54Дан целочисленный массив. Найти количество элементов, расположенных перед последним минимальным.		
arr = [58, 25, 11, -8, 4, 18, -15, 49, 0, -40, 36, -25, 6, 10, -4, 58, -4, -40]
result = arr.rindex(arr.min)
puts result

#35---------------------------------------------------------------------------------------------------------------------

#55Дан целочисленный массив. Найти количество элементов, расположенных после последнего максимального.
arr = [58, 25, 11, -8, 4, 18, -15, 49, 0, -40, 36, -25, 6, 10, -4, 58, -4, -40]
result = arr.size - arr.rindex(arr.max) - 1
puts result

#36---------------------------------------------------------------------------------------------------------------------

#56Дан целочисленный массив. Найти количество элементов, расположенных после последнего минимального .
arr = [58, 25, 11, -8, 4, 18, -15, 49, 0, -40, 36, -25, 6, 10, -4, 58, -4, -40]
result = arr.size - arr.rindex(arr.min) - 1
puts result

#37---------------------------------------------------------------------------------------------------------------------

#25Дан целочисленный массив. Преобразовать его, вставив перед каждым положительным элементом нулевой элемент.	
arr = [58, 25, 11, -8, 4, 18, -15, 49, 0, -40, 36, -25, 6, 10, -4, 58, -4, -40]
el0 = arr.first.to_s
arr.map! { |el| el > 0 ? el0 + el.to_s : el.to_s }
result = arr
puts result

#38---------------------------------------------------------------------------------------------------------------------

#26Дан целочисленный массив. Преобразовать его, вставив перед каждым отрицательным элементом нулевой элемент.
arr = [58, 25, 11, -8, 4, 18, -15, 49, 0, -40, 36, -25, 6, 10, -4, 58, -4, -40]
el0 = arr.first.to_s
arr.map! { |el| el < 0 ? el0 + el.to_s : el.to_s }
result = arr
puts result

#39---------------------------------------------------------------------------------------------------------------------
#27Дан целочисленный массив. Преобразовать его, вставив после каждого положительного элемента нулевой элемент.
arr = [58, 25, 11, -8, 4, 18, -15, 49, 0, -40, 36, -25, 6, 10, -4, 58, -4, -40]
el0 = arr.first.to_s
arr.map! { |el| el > 0 ? el.to_s + el0 : el.to_s }
result = arr
puts result

#40---------------------------------------------------------------------------------------------------------------------

#28Дан целочисленный массив. Преобразовать его, вставив после каждого отрицательного элемента нулевой элемент.	
arr = [58, 25, 11, -8, 4, 18, -15, 49, 0, -40, 36, -25, 6, 10, -4, 58, -4, -40]
el0 = arr.first.to_s
arr.map! { |el| el < 0 ? el.to_s + el0 : el.to_s }
result = arr
puts result

#41---------------------------------------------------------------------------------------------------------------------
#97Дан целочисленный массив и число К. Вывести индекс последнего элемента, меньшего К.
arr = [58, 25, 11, -8, 4, 18, -15, 49, 0, -40, 36, -25, 6, 10, -4, 58, -4, -40]
#k = gets.chomp.to_i
k = 2
result = arr.rindex { |el| el < k }
puts result

#42---------------------------------------------------------------------------------------------------------------------
#96Дан целочисленный массив и число К. Вывести индекс первого элемента, большего К.	
arr = [58, 25, 11, -8, 4, 18, -15, 49, 0, -40, 36, -25, 6, 10, -4, 58, -4, -40]
#k = gets.chomp.to_i
k = 2
result = arr.rindex { |el| el > k }
puts result

#43---------------------------------------------------------------------------------------------------------------------

#95Дан целочисленный массив и число К. Вывести количество элементов, меньших К.
arr = [58, 25, 11, -8, 4, 18, -15, 49, 0, -40, 36, -25, 6, 10, -4, 58, -4, -40]
#number = gets.chomp.to_i
k = 2
result = arr.count { |el| el < k }
puts result

#44---------------------------------------------------------------------------------------------------------------------

#57Дан целочисленный массив. Найти индекс первого экстремального (то есть минимального или максимального) элемента.																									
arr = [8, -30, 25, 11, -8, 4, -30, 18, -15, 49, 36, -25, 6, 10, -4, 58, -25, -30]
f = [arr.min, arr.max]
result = arr.index { |el| f.include? el }
puts result

#45---------------------------------------------------------------------------------------------------------------------

#58Дан целочисленный массив. Найти индекс последнего экстремального (то есть минимального или максимального) элемента.	
arr = [58, -30, 25, 11, -8, 4, -30, 18, -15, 49, 36, -25, 6, 10, -4, 58, -25, -30]
result = arr.rindex { |el| el == arr.max or el == arr.min }
puts result

#46---------------------------------------------------------------------------------------------------------------------

#71Дан целочисленный массив. Удалить все элементы, встречающиеся менее двух раз.
arr = [58, 25, 18, -40, 11, -8, 4, 18, -15, 6, 49, 0, 18, -40, 58, 11, 18, 18, 36, -25, 6, 10, -4, 11, -15, 58, -4, -40]
result = arr.filter_map { |el| el if arr.count(el) < 2 }
puts result

#47---------------------------------------------------------------------------------------------------------------------

#72Дан целочисленный массив. Удалить все элементы, встречающиеся более двух раз.																									
arr = [58, 25, 18, -40, 11, -8, 4, 18, -15, 6, 49, 0, 18, -40, 58, 11, 18, 18, 36, -25, 6, 10, -4, 11, -15, 58, -4, -40]
result = arr.filter_map { |el| el if arr.count(el) > 2 }
puts result

#48---------------------------------------------------------------------------------------------------------------------

#73Дан целочисленный массив. Удалить все элементы, встречающиеся ровно два раза.
arr = [58, 25, 18, -40, 11, -8, 4, 18, -15, 6, 49, 0, 18, -40, 58, 11, 18, 18, 36, -25, 6, 10, -4, 11, -15, 58, -4, -40]
result = arr.filter_map { |el| el if arr.count(el) == 2 }
puts result

#49---------------------------------------------------------------------------------------------------------------------

#74Дан целочисленный массив. Удалить все элементы, встречающиеся ровно три раза.
arr = [58, 25, 18, -40, 11, -8, 4, 18, -15, 6, 49, 0, 18, -40, 58, 11, 18, 18, 36, -25, 6, 10, -4, 11, -15, 58, -4, -40]
result = arr.filter_map { |el| el if arr.count(el) == 3 }
puts result

#-----------------------------------------------------------------------------------------------------------------------
#76Дан целочисленный массив. Найти среднее арифметическое квадратов его элементов.																											
arr = [58, 25, 18, -40, 11, -8, 4, 18, -15, 6, 49, 0, 18, -40, 58, 11, 18, 18, 36, -25, 6, 10, -4, 11, -15, 58, -4, -40]
result = arr.map { |el| el ** 2 }.sum / arr.size
puts result

    